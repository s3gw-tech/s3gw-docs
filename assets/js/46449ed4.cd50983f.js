"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7727],{8807:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>r});var i=t(4848),a=t(8453);const s={},d="SFS SAL Backend Design",o={id:"0003-sfs",title:"SFS SAL Backend Design",description:"Context and Problem Statement",source:"@site/../s3gw/docs/decisions/0003-sfs.md",sourceDirName:".",slug:"/0003-sfs",permalink:"/decisions/0003-sfs",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"decisions",previous:{title:"s3gw Storage Backend",permalink:"/decisions/0002-s3gw-storage-backend"},next:{title:"Context and Problem Statement",permalink:"/decisions/0004-release-captain"}},l={},r=[{value:"Context and Problem Statement",id:"context-and-problem-statement",level:2},{value:"Decision Drivers",id:"decision-drivers",level:2},{value:"Decision Outcome",id:"decision-outcome",level:2},{value:"Data and Metadata",id:"data-and-metadata",level:3},{value:"Data Layout",id:"data-layout",level:3},{value:"Metadata Model",id:"metadata-model",level:3},{value:"Object State Machine",id:"object-state-machine",level:3},{value:"Last Object Version",id:"last-object-version",level:3}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"sfs-sal-backend-design",children:"SFS SAL Backend Design"}),"\n",(0,i.jsx)(n.h2,{id:"context-and-problem-statement",children:"Context and Problem Statement"}),"\n",(0,i.jsx)(n.p,{children:"Broader SFS design. Follow up ADRs will go into depth; this is for\nbreadth."}),"\n",(0,i.jsx)(n.h2,{id:"decision-drivers",children:"Decision Drivers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Assume NVMe-alike storage technology. High parallelism, similar\naccess latency over all blocks."}),"\n",(0,i.jsx)(n.li,{children:"Versioning: Every object will have multiple versions."}),"\n",(0,i.jsx)(n.li,{children:"Files on disk are immutable once committed."}),"\n",(0,i.jsx)(n.li,{children:"Easy querying of bucket, object and version data using SQL."}),"\n",(0,i.jsx)(n.li,{children:"Simplicity"}),"\n",(0,i.jsx)(n.li,{children:"Leave room to grow: Keep sharding to multiple SQLite databases in mind."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"decision-outcome",children:"Decision Outcome"}),"\n",(0,i.jsx)(n.h3,{id:"data-and-metadata",children:"Data and Metadata"}),"\n",(0,i.jsx)(n.p,{children:"Data is the payload submitted in PUT requests by the user."}),"\n",(0,i.jsx)(n.p,{children:"Metadata consists of S3 metadata (atime, names) and internal metadata\n(object path on disk, version id)."}),"\n",(0,i.jsx)(n.p,{children:"Metadata lives in SQLite databases; Data in files on disk."}),"\n",(0,i.jsx)(n.h3,{id:"data-layout",children:"Data Layout"}),"\n",(0,i.jsx)(n.p,{children:"Store object data on a standard Linux filesystem like XFS or ext4."}),"\n",(0,i.jsx)(n.p,{children:"Identify objects by UUID assigned on create. Use version 4, random UUIDs."}),"\n",(0,i.jsxs)(n.p,{children:["Use a multi level directory tree based on the object UUID to address\nobject data files on the filesystem. Use two one byte / two hex char\nlevels. For example, map UUID ",(0,i.jsx)(n.code,{children:"683600a-b6c4-4760-a083-5f1a65ab8e95"}),"\n",(0,i.jsx)(n.code,{children:"/36/83/600ab6c44760a0835f1a65ab8e95"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"metadata-model",children:"Metadata Model"}),"\n",(0,i.jsx)(n.mermaid,{value:'erDiagram\n    Bucket ||..}o Object : has\n    Object ||..}o VersionedObject : has\n    VersionedObject ||..|| ObjectState : "is in"\n\n    Bucket {\n        serial bucket_id PK\n        string name\n        blob data\n    }\n\n    Object {\n        uuid object_uuid\n        serial object_id PK\n        int bucket_id FK\n        string name\n        blob data\n    }\n\n    VersionedObject {\n        serial version_id\n        int object_id FK\n        int obj_state_Id FK\n        int checksum\n        ts ctime\n        ts dtime\n        int size\n        path filename\n        bool pinned "Prevent deletion"\n    }\n\n    ObjectState {\n        serial obj_state_id PK\n        string name\n    }'}),"\n",(0,i.jsxs)(n.p,{children:["We store most RGW metadata using the Ceph encoder in blobs, as\nexemplified with ",(0,i.jsx)(n.em,{children:"data"})," in the ER diagram. We extract values to\ncolumns if we need to query them."]}),"\n",(0,i.jsx)(n.h3,{id:"object-state-machine",children:"Object State Machine"}),"\n",(0,i.jsx)(n.mermaid,{value:"stateDiagram-v2\n    [*] --\x3e Writing\n    [*] --\x3e Deleted\n    Writing --\x3e Writing\n    Writing --\x3e Committed\n    Committed --\x3e Deleted"}),"\n",(0,i.jsxs)(n.p,{children:["Object versions follow a state machine. When created by upload they\nstart in ",(0,i.jsx)(n.em,{children:"writing"})," and once all data is on disk reach ",(0,i.jsx)(n.em,{children:"committed"}),".\nMultipart uploads stay in ",(0,i.jsx)(n.em,{children:"writing"})," until the user uploaded all parts, then\nreach ",(0,i.jsx)(n.em,{children:"committed"}),". Committed versions are available for download.\nVersions may immediately reach deleted when issuing a DELETE to an\nobject or from ",(0,i.jsx)(n.em,{children:"committed"})," when deleting an existing version."]}),"\n",(0,i.jsx)(n.p,{children:"Deletion is generally soft and follows garbage collection and\nretention rules."}),"\n",(0,i.jsxs)(n.p,{children:["Keeping a ",(0,i.jsx)(n.em,{children:"writing"})," state allows us to fail uploads when they don't\nreach ",(0,i.jsx)(n.em,{children:"committed"})," after a timeout."]}),"\n",(0,i.jsx)(n.h3,{id:"last-object-version",children:"Last Object Version"}),"\n",(0,i.jsx)(n.p,{children:"Use max(version_id) in state committed of selected object."})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var i=t(6540);const a={},s=i.createContext(a);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);