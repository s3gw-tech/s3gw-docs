"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8893],{2729:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var i=s(4848),t=s(8453);const r={},a="Configuring the s3gw",c={id:"config-s3gw",title:"Configuring the s3gw",description:"The following configuration options are for the s3gw and can be configured",source:"@site/../s3gw/docs/guide/config-s3gw.md",sourceDirName:".",slug:"/config-s3gw",permalink:"/config-s3gw",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Quickstart",permalink:"/quickstart"},next:{title:"Installing s3gw with Helm charts",permalink:"/helm-charts"}},l={},o=[{value:"Access credentials",id:"access-credentials",level:2},{value:"Ingress options",id:"ingress-options",level:2},{value:"Certification manager",id:"certification-manager",level:2},{value:"TLS issuer",id:"tls-issuer",level:2},{value:"TLS",id:"tls",level:2},{value:"s3gw user interface",id:"s3gw-user-interface",level:2},{value:"S3 service",id:"s3-service",level:2},{value:"Service name",id:"service-name",level:3},{value:"Storage",id:"storage",level:2},{value:"Local storage",id:"local-storage",level:3},{value:"Log settings",id:"log-settings",level:2},{value:"Developer options",id:"developer-options",level:2},{value:"Container Object Storage Interface (COSI)",id:"container-object-storage-interface-cosi",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Installation",id:"installation",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"configuring-the-s3gw",children:"Configuring the s3gw"}),"\n",(0,i.jsxs)(n.p,{children:["The following configuration options are for the s3gw and can be configured\nwithin the ",(0,i.jsx)(n.code,{children:"values.yaml"})," file."]}),"\n",(0,i.jsx)(n.h2,{id:"access-credentials",children:"Access credentials"}),"\n",(0,i.jsx)(n.p,{children:"We strongly advise customizing the initial access credentials.\nThese can be used to access the admin UI, as well as the S3 endpoint.\nAdditional credentials can be created using the admin UI."}),"\n",(0,i.jsx)(n.p,{children:"Initial credentials for the default user can be provided in different ways:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Explicit values"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This is the default mode. You provide explicit values for both the S3 Access\nKey and the S3 Secret Key."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"accessKey: admin\nsecretKey: foobar\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Random values"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If you set ",(0,i.jsx)(n.code,{children:"accessKey"})," and/or ",(0,i.jsx)(n.code,{children:"secretKey"})," as the empty string:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"accessKey:\nsecretKey:\n"})}),"\n",(0,i.jsx)(n.p,{children:"The chart then computes a random alphanumeric string of 32 characters\nfor the field(s). The generated values are printed to the console\nafter the installation completes successfully. They can also be\nretrieved later."}),"\n",(0,i.jsx)(n.p,{children:"To obtain the access key:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl --namespace $S3GW_NAMESPACE get secret \\\n  $(yq .defaultUserCredentialSecret values.yaml) \\\n  -o yaml | yq .data.RGW_DEFAULT_USER_ACCESS_KEY | base64 -d\n"})}),"\n",(0,i.jsx)(n.p,{children:"To obtain the secret key:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl --namespace $S3GW_NAMESPACE get secret \\\n  $(yq .defaultUserCredentialSecret values.yaml) \\\n  -o yaml | yq .data.RGW_DEFAULT_USER_SECRET_KEY | base64 -d\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Existing secret"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You can provide an existing secret containing the S3 credentials\nfor the default user. This secret must contain 2 keys:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"RGW_DEFAULT_USER_ACCESS_KEY"}),": the S3 Access Key for the default user."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"RGW_DEFAULT_USER_SECRET_KEY"}),": the S3 Secret Key for the default user."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"To use this configuration, you have to enable the flag:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"useExistingSecret: true\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can set the name of the existing secret with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'defaultUserCredentialsSecret: "my-secret"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"ingress-options",children:"Ingress options"}),"\n",(0,i.jsxs)(n.p,{children:["If you want to expose the S3 service outside the cluster (for example, to a\nhost static content for a website) you need an ingress for the outside\ntraffic to reach the s3gw. Set ",(0,i.jsx)(n.code,{children:"ingress.enabled"})," to ",(0,i.jsx)(n.code,{children:"true"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"ingress:\n  enabled: true\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you only want cluster-internal access, set to ",(0,i.jsx)(n.code,{children:"false"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"ingress:\n  enabled: false\n"})}),"\n",(0,i.jsx)(n.h2,{id:"certification-manager",children:"Certification manager"}),"\n",(0,i.jsxs)(n.p,{children:["If you want to have secure connections to the s3gw using TLS and do not want\nto manage certificates by hand set ",(0,i.jsx)(n.code,{children:"useCertManager"})," to ",(0,i.jsx)(n.code,{children:"true"}),". This does\nrequire you to have ",(0,i.jsx)(n.code,{children:"jetstack certmanager"})," installed from ",(0,i.jsx)(n.code,{children:"https://charts.jetstack.io"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["As ",(0,i.jsx)(n.code,{children:"cert-manager"})," will be installed in its own namespace, you can give a\nnamespace where the chart can communicate with the cert manager using\n",(0,i.jsx)(n.code,{children:"certManagerNamespace"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"tls-issuer",children:"TLS issuer"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"tlsIssuer"})," property controls how certificates are issued with the ",(0,i.jsx)(n.code,{children:"cert-manager"}),".\nEither use ",(0,i.jsx)(n.code,{children:"s3gw-letsencrypt-issuer"})," when you want certificates that are issued by\n",(0,i.jsx)(n.code,{children:"letsencrypt"})," or use the ",(0,i.jsx)(n.code,{children:"s3gw-issuer"})," for a self-signed certificate."]}),"\n",(0,i.jsx)(n.h2,{id:"tls",children:"TLS"}),"\n",(0,i.jsxs)(n.p,{children:["If you are not using the cert-manager, you have to manually specify\nthe TLS certificates in the ",(0,i.jsx)(n.code,{children:"values.yaml"})," file to enable TLS\nat the various Ingresses and ClusterIP resources.\nNote that the connection between the Ingress and the s3gw's ClusterIP\nwithin the cluster will not be TLS protected."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"tls:\n  publicDomain:\n    crt: PUBLIC_DOMAIN_CERTIFICATE_HERE\n    key: PUBLIC_DOMAIN_CERTIFICATE_KEY_HERE\n  privateDomain:\n    crt: PRIVATE_DOMAIN_CERTIFICATE_HERE\n    key: PRIVATE_DOMAIN_CERTIFICATE_KEY_HERE\n  ui:\n    publicDomain:\n      crt: CERTIFICATE_FOR_UI\n      key: CERTIFICATE_KEY_FOR_UI\n"})}),"\n",(0,i.jsx)(n.p,{children:"The certificates must be provided as base64 encoded PEM in one long\nstring without line breaks. You can create them from a PEM file."}),"\n",(0,i.jsx)(n.h2,{id:"s3gw-user-interface",children:"s3gw user interface"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ui.enabled"})," is by default set to ",(0,i.jsx)(n.code,{children:"true"}),", but can be set to ",(0,i.jsx)(n.code,{children:"false"})," to use\nthe s3gw standalone."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ui.serviceName"})," and ",(0,i.jsx)(n.code,{children:"ui.publicDomain"})," are the hostname and domain name\nwhich the ingress will listed on for access to the UI. If the UI is set\nas such:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  serviceName: object-browser\n  publicDomain: example.com\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The UI can be accessed under ",(0,i.jsx)(n.code,{children:"http(s)://object-browser.example.com"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"s3-service",children:"S3 service"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"useExistingSecret"})," can be used to tell the chart that you want to provide a\nsecret where the access credentials for the first account can be found.\n",(0,i.jsx)(n.code,{children:"defaultUserCredentialsSecret"})," can be used to tell helm which secret that will be."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"accessKey"})," and ",(0,i.jsx)(n.code,{children:"secretKey"})," are left empty, credentials will be generated\nautomatically."]}),"\n",(0,i.jsx)(n.h3,{id:"service-name",children:"Service name"}),"\n",(0,i.jsxs)(n.p,{children:["There are two possible ways to access the s3gw: from inside the Kubernetes\ncluster and from the outside. For both, the s3gw must be configured with the\ncorrect service and domain name. Use the ",(0,i.jsx)(n.code,{children:"publicDomain"})," and the\n",(0,i.jsx)(n.code,{children:"ui.publicDomain"})," setting to configure the domain under which the s3gw and the\nUI respectively be available to the outside of the Kubernetes cluster. Use the\n",(0,i.jsx)(n.code,{children:"privateDomain"})," setting to set the cluster's internal domain and make the s3gw\navailable inside the cluster to other deployments."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'serviceName: s3gw\npublicDomain: "be.127.0.0.1.example.com"\nprivateDomain: "s3gw-namespace.svc.cluster.local"\nui:\n  serviceName: s3gw-ui\n  publicDomain: "fe.127.0.0.1.example.com"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"storage",children:"Storage"}),"\n",(0,i.jsxs)(n.p,{children:["The s3gw is best deployed on top of a ",(0,i.jsx)(n.a,{href:"https://longhorn.io",children:"Longhorn"})," volume.\nIf you have Longhorn installed in your cluster, all appropriate resources are\nautomatically deployed for you."]}),"\n",(0,i.jsxs)(n.p,{children:["The size of the volume can be controlled with ",(0,i.jsx)(n.code,{children:"storageSize"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"storageSize: 10Gi\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you want to reuse an existing storage class or otherwise need more control\nover storage settings, set ",(0,i.jsx)(n.code,{children:"storageClass.create"})," to ",(0,i.jsx)(n.code,{children:"false"})," and\n",(0,i.jsx)(n.code,{children:"storageClass.name"})," to the name of your preferred storage class."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"storageClass:\n  name: my-custom-storageclass\n  create: false\n"})}),"\n",(0,i.jsx)(n.h3,{id:"local-storage",children:"Local storage"}),"\n",(0,i.jsxs)(n.p,{children:["You can use the ",(0,i.jsx)(n.code,{children:"storageClass.local"})," and ",(0,i.jsx)(n.code,{children:"storageClass.localPath"})," variables to\nset up a node-local volume for testing if you do not have Longhorn."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," This is an experimental feature for development use only."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"log-settings",children:"Log settings"}),"\n",(0,i.jsxs)(n.p,{children:["The log verbosity can also be configured for the s3gw pod. Set the ",(0,i.jsx)(n.code,{children:"logLevel"}),"\nproperty to one of ",(0,i.jsx)(n.code,{children:"none"}),", ",(0,i.jsx)(n.code,{children:"low"}),", ",(0,i.jsx)(n.code,{children:"medium"}),", or ",(0,i.jsx)(n.code,{children:"high"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'logLevel: "none"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Generally speaking, ",(0,i.jsx)(n.code,{children:"none"})," or ",(0,i.jsx)(n.code,{children:"low"})," should be fine for most deployments, unless\nthere is reason to believe it's misbehaving. In that case, the highest\n",(0,i.jsx)(n.code,{children:"logLevel"})," we recommend is ",(0,i.jsx)(n.code,{children:"medium"}),". Higher log levels should be used only in\ncase the system is misbehaving significantly and there's a suspicion more\nverbose debugging might be necessary. Please note that at ",(0,i.jsx)(n.code,{children:"high"})," the system may\nbe impacted."]}),"\n",(0,i.jsx)(n.h2,{id:"developer-options",children:"Developer options"}),"\n",(0,i.jsx)(n.p,{children:"In some cases, custom image settings are needed, for example in an air-gapped\nenvironment or for developers. In that case, you can modify the registry and\nimage settings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'imageRegistry: "quay.io/s3gw"\nimageName: "s3gw"\nimageTag: "latest"\nimagePullPolicy: "Always"\n'})}),"\n",(0,i.jsx)(n.p,{children:"To configure the image and registry for the user interface, use:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'ui.imageRegistry: "quay.io/s3gw"\nui.imageName: "s3gw-ui"\nui.imagePullPolicy: "Always"\nui.imageTag: "latest"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"container-object-storage-interface-cosi",children:"Container Object Storage Interface (COSI)"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"WARNING"}),": Be advised that COSI standard is currently in ",(0,i.jsx)(n.strong,{children:"alpha"})," state.\nThe COSI implementation provided by s3gw is considered an experimental\nfeature and changes to the COSI standard are expected in this phase.\nThe s3gw team does not control the upstream development of COSI."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(n.p,{children:"If you are going to use COSI, ensure some resources are pre-deployed on the\ncluster."}),"\n",(0,i.jsx)(n.p,{children:"COSI requirements:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"COSI CRDs"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"To deploy COSI CRDs, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl create -k github.com/kubernetes-sigs/container-object-storage-interface-api\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"COSI Controller"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"To deploy the COSI Controller, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl create -k github.com/kubernetes-sigs/container-object-storage-interface-controller\n"})}),"\n",(0,i.jsx)(n.p,{children:"Check if the controller pod is in the default namespace:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"NAME                                        READY   STATUS    RESTARTS   AGE\nobjectstorage-controller-6fc5f89444-4ws72   1/1     Running   0          2d6h\n"})}),"\n",(0,i.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"COSI support is disabled by default in s3gw. To enable it, set:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"cosi.enabled: true\n"})}),"\n",(0,i.jsx)(n.p,{children:"Normally, you do not need to change the chart's defaults for the COSI related fields."}),"\n",(0,i.jsx)(n.p,{children:"However, the following fields can be customized:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"\ncosi.driver.imageName: # It specifies a custom image name for the COSI driver.\n                       # Default: s3gw-cosi-driver\n\ncosi.driver.imageTag: # It specifies a custom image tag for the COSI driver.\n                      # Default: the current chart version.\n\ncosi.driver.imageRegistry: #It specifies a custom image registry for the COSI driver.\n                           #Default: quay.io/s3gw\n\ncosi.driver.imagePullPolicy: # It specifies the pull policy for the COSI driver.\n                             # Default: IfNotPresent\n\ncosi.driver.name: # It specifies the name of the COSI driver.\n                  # Default: {Release.Name}.{Release.Namespace}.objectstorage.k8s.io\n\ncosi.sidecar.imageName: # It specifies a custom image name for the COSI sidecar.\n                        # Default: s3gw-cosi-sidecar\n\ncosi.sidecar.imageTag: # It specifies a custom image tag for the COSI sidecar.\n                       # Default: the current chart version.\n\ncosi.sidecar.imageRegistry: # It specifies a custom image registry for the COSI sidecar.\n                            # Default: quay.io/s3gw\n\ncosi.sidecar.imagePullPolicy: # It specifies the pull policy for the COSI sidecar.\n                              # Default: IfNotPresent\n\ncosi.sidecar.logLevel: # It specifies the log verbosity of the COSI sidecar.\n                       # Higher values are more verbose.\n                       # Default: 5\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);